<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="453" />
    <option name="newTranslationDialogWidth" value="787" />
    <option name="newTranslationDialogX" value="704" />
    <option name="newTranslationDialogY" value="417" />
    <histories>
      <item value="addressee" />
      <item value="award" />
      <item value="dash Gap" />
      <item value="dash Width" />
      <item value="ERR AUTH DENIED" />
      <item value="IncludedLayouts has protected access in ViewDataBinding" />
      <item value="coerce At Least" />
      <item value="Cancel" />
      <item value="prepay Id" />
      <item value="track" />
      <item value="feat" />
      <item value="generate Fake Lottery Result" />
      <item value="Fake" />
      <item value="is Invalid" />
      <item value="rate" />
      <item value="INVALID OFFSET" />
      <item value="While trying to find next view to focus, LayoutManager will not try to scroll more than this factor times the total space of the list. If layout is vertical, total space is the height minus padding, if layout is horizontal, total space is the width minus padding." />
      <item value="delta" />
      <item value="Justifies wheel" />
      <item value="true if corresponding item exists and is added" />
      <item value="the flag indicates if view should be first" />
      <item value="Sets the x location of the point around which the view is {@link setRotation(float) rotated} and {@link setScaleX(float) scaled}. By default, the pivot point is centered on the object. Setting this property disables this behavior and causes the view to use only the explicitly set pivotX and pivotY values. @param pivotX The x location of the pivot point. @see getRotation() @see getScaleX() @see getScaleY() @see getPivotY() @attr ref android.R.styleableView_transformPivotX" />
      <item value="Kotlin Null Pointer Exception" />
      <item value="purple" />
      <item value="&quot;please invoke [payservice] initwxsecret method first&quot;" />
      <item value="please invoke init [PayService] initWxSecret method first" />
      <item value="Calls the specified function [block] with `this` value as its argument and returns `this` value. For detailed usage information see the documentation for [scope functions](https:kotlinlang.orgdocsreferencescope-functions.htmlalso)." />
      <item value="component" />
      <item value="This field leaks a context object" />
      <item value="Dubbing" />
      <item value="Removes characters in the specified range from this string builder and returns this instance. @param startIndex the beginning (inclusive) of the range to remove. @param endIndex the end (exclusive) of the range to remove. @throws IndexOutOfBoundsException or [IllegalArgumentException] when [startIndex] is out of range of this string builder indices or when `startIndex &gt; endIndex`." />
      <item value="get Start Time" />
      <item value="book Adapter" />
      <item value="Failed to find configured root that contains datadatacom.fish.ancient.poemscacheshare1631676003805.png" />
      <item value="Classifier 'CreationCardBean' does not have a companion object, and thus must be initialized here" />
      <item value="Implementation of {@link PagerAdapter} that uses a {@link Fragment} to manage each page. This class also handles saving and restoring of fragment's state. &lt;p&gt;This version of the pager is more useful when there are a large number of pages, working more like a list view. When pages are not visible to the user, their entire fragment may be destroyed, only keeping the saved state of that fragment. This allows the pager to hold on to much less memory associated with each visited page as compared to {@link FragmentPagerAdapter} at the cost of potentially more overhead when switching between pages. &lt;p&gt;When using FragmentPagerAdapter the host ViewPager must have a valid ID set.&lt;p&gt; &lt;p&gt;Subclasses only need to implement {@link getItem(int)} and {@link getCount()} to have a working adapter. &lt;p&gt;Here is an example implementation of a pager containing fragments of lists: {@sample frameworkssupportsamplesSupport4Demossrcmainjavacomexampleandroidsupportv4appFragmentStatePagerSupport.java complete} &lt;p&gt;The &lt;code&gt;R.layout.fragment_pager&lt;code&gt; resource of the top-level fragment is: {@sample frameworkssupportsamplesSupport4Demossrcmainreslayoutfragment_pager.xml complete} &lt;p&gt;The &lt;code&gt;R.layout.fragment_pager_list&lt;code&gt; resource containing each individual fragment's layout is: {@sample frameworkssupportsamplesSupport4Demossrcmainreslayoutfragment_pager_list.xml complete} @deprecated Switch to {@link androidx.viewpager2.widget.ViewPager2} and use {@link androidx.viewpager2.adapter.FragmentStateAdapter} instead." />
      <item value="Hint to the compressor, 0-100. 0 meaning compress for small size, 100 meaning compress for max quality. Some formats, like PNG which is lossless, will ignore the quality setting" />
      <item value="Choose Cover Delegate" />
      <item value="source exhausted prematurely" />
      <item value="compress" />
      <item value="Logic" />
      <item value="duration" />
      <item value="Adds all of the elements of the specified collection to the end of this list. The elements are appended in the order they appear in the [elements] collection. @return `true` if the list was changed as the result of the operation." />
      <item value="is Already Added" />
      <item value="obtain" />
      <item value="Server" />
      <item value="Update" />
      <item value="Upgrade" />
      <item value="Indicates whether this View is currently in edit mode. A View is usually in edit mode when displayed within a developer tool. For instance, if this View is being drawn by a visual user interface builder, this method should return true. Subclasses should check the return value of this method to provide different behaviors if their normal behavior might interfere with the host environment. For instance: the class spawns a thread in its constructor, the drawing code relies on device-specific features, etc. This method is usually checked in the drawing code of custom widgets. @return True if this View is in edit mode, false otherwise." />
      <item value="Retrieve a dimensional unit attribute at &lt;var&gt;index&lt;var&gt;. Unit conversions are based on the current {@link DisplayMetrics} associated with the resources this {@link TypedArray} object came from. &lt;p&gt; This method will throw an exception if the attribute is defined but is not a dimension. @param index Index of attribute to retrieve. @param defValue Value to return if the attribute is not defined or not a resource. @return Attribute dimension value multiplied by the appropriate metric, or defValue if not defined. @throws RuntimeException if the TypedArray has already been recycled. @throws UnsupportedOperationException if the attribute is defined but is not an integer. @see getDimensionPixelOffset @see getDimensionPixelSize" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="289" />
        <entry key="ENGLISH" value="290" />
        <entry key="FRENCH" value="2" />
        <entry key="CROATIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SOMALI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1635218679380" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="primaryLanguage" value="CHINESE" />
      </app-key>
    </option>
    <option name="googleTranslateSettings">
      <google-translate>
        <option name="primaryLanguage" value="CHINESE" />
      </google-translate>
    </option>
    <option name="primaryFontPreviewText" value="海内存知己&#10;天涯若比邻" />
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="primaryLanguage" value="AUTO" />
      </youdao-translate>
    </option>
  </component>
</application>