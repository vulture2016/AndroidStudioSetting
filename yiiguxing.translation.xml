<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="453" />
    <option name="newTranslationDialogWidth" value="791" />
    <option name="newTranslationDialogX" value="704" />
    <option name="newTranslationDialogY" value="417" />
    <histories>
      <item value="PAGE TYPE" />
      <item value="hidden Yellow Btn" />
      <item value="IS OPEN SYSTEM PUSH" />
      <item value="decrypt" />
      <item value="Encrypt" />
      <item value="Space is a lightweight View subclass that may be used to create gaps between components in general purpose layouts." />
      <item value="in general purpose layouts." />
      <item value="When the animation reaches the end and &lt;code&gt;repeatCount&lt;code&gt; is INFINITE or a positive value, the animation reverses direction on every iteration." />
      <item value="needle" />
      <item value="thickness Ratio" />
      <item value="indeterminate" />
      <item value="Execution can walk off end of code area" />
      <item value="Constellation" />
      <item value="Adds a LifecycleObserver that will be notified when the LifecycleOwner changes state. &lt;p&gt; The given observer will be brought to the current state of the LifecycleOwner. For example, if the LifecycleOwner is in {@link StateSTARTED} state, the given observer will receive {@link EventON_CREATE}, {@link EventON_START} events. @param observer The observer to notify." />
      <item value="scroll to news" />
      <item value="SCROLLER TO NEWS" />
      <item value="lunar" />
      <item value="auspicious days" />
      <item value="Fold" />
      <item value="Adds all of the elements of the specified collection to the end of this list. The elements are appended in the order they appear in the [elements] collection. @return `true` if the list was changed as the result of the operation." />
      <item value="predicate" />
      <item value="Fake" />
      <item value="Represents a generic pair of two values. There is no meaning attached to values in this class, it can be used for any purpose. Pair exhibits value semantics, i.e. two pairs are equal if both components are equal. An example of decomposing it into values: @sample samples.misc.Tuples.pairDestructuring @param A type of the first value. @param B type of the second value. @property first First value. @property second Second value. @constructor Creates a new instance of Pair." />
      <item value="Creates a tuple of type [Pair] from this and [that]." />
      <item value="Intersect the current clip with the specified rectangle, which is expressed in local coordinates." />
      <item value="intrinsic" />
      <item value="noinspection" />
      <item value="Please adapt the scoped storage, or use the MANAGE_EXTERNAL_STORAGE permission" />
      <item value="allowed" />
      <item value="Debouncing" />
      <item value="AUSPICIOUS DAYS" />
      <item value="milliseconds" />
      <item value="memorial day" />
      <item value="erase Color" />
      <item value="Update row(s) in a content URI. If the content provider supports transactions the update will be atomic. @param uri The URI to modify. @param values The new field values. The key is the column name for the field. A null value will remove an existing field value. @param where A filter to apply to rows before updating, formatted as an SQL WHERE clause (excluding the WHERE itself). @return the number of rows updated. @throws NullPointerException if uri or values are null" />
      <item value="BELONG" />
      <item value="The following classes could not be instantiated:" />
      <item value="Adds the specified element as the tail (last element) of this list." />
      <item value="Retrieves, but does not remove, the last element of this list, or returns {@code null} if this list is empty. @return the last element of this list, or {@code null} if this list is empty @since 1.6" />
      <item value="clip" />
      <item value="related friends" />
      <item value="relative friends" />
      <item value="relative" />
      <item value="trunk" />
      <item value="Case" />
      <item value="Static Field Leak" />
      <item value="large price" />
      <item value="领取" />
      <item value="Sorts elements in the list in-place descending according to natural sort order of the value returned by specified [selector] function." />
      <item value="Sorts elements in the list in-place according to natural sort order of the value returned by specified [selector] function." />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="274" />
        <entry key="ENGLISH" value="275" />
        <entry key="FRENCH" value="2" />
        <entry key="CROATIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SOMALI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1628492228910" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="primaryLanguage" value="CHINESE" />
      </app-key>
    </option>
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="primaryLanguage" value="AUTO" />
      </youdao-translate>
    </option>
  </component>
</application>