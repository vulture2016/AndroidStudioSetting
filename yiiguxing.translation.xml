<application>
  <component name="AppStorage">
    <option name="newTranslationDialogCollapseDictViewer" value="false" />
    <option name="newTranslationDialogHeight" value="453" />
    <option name="newTranslationDialogWidth" value="791" />
    <option name="newTranslationDialogX" value="704" />
    <option name="newTranslationDialogY" value="417" />
    <histories>
      <item value="Represents a generic pair of two values. There is no meaning attached to values in this class, it can be used for any purpose. Pair exhibits value semantics, i.e. two pairs are equal if both components are equal. An example of decomposing it into values: @sample samples.misc.Tuples.pairDestructuring @param A type of the first value. @param B type of the second value. @property first First value. @property second Second value. @constructor Creates a new instance of Pair." />
      <item value="related friends" />
      <item value="relative friends" />
      <item value="relative" />
      <item value="trunk" />
      <item value="Case" />
      <item value="Static Field Leak" />
      <item value="large price" />
      <item value="领取" />
      <item value="Sorts elements in the list in-place descending according to natural sort order of the value returned by specified [selector] function." />
      <item value="Sorts elements in the list in-place according to natural sort order of the value returned by specified [selector] function." />
      <item value="Colon" />
      <item value="addition" />
      <item value="Notified when a tap occurs with the up {@link MotionEvent} that triggered it. @param e The up motion event that completed the first tap @return true if the event is consumed, else false" />
      <item value="on Single Tap Up" />
      <item value="Move the task containing this activity to the back of the activity stack. The activity's order within the task is unchanged. @param nonRoot If false then this only works if the activity is the root of a task; if true it will work for any activity in a task. @return If the task was moved (or it was already at the back) true is returned, else false." />
      <item value="core" />
      <item value="week" />
      <item value="condition" />
      <item value="rank" />
      <item value="internal" />
      <item value="rank num" />
      <item value="排名" />
      <item value="Performs the given action for each remaining element until all elements have been processed or the action throws an exception. Actions are performed in the order of iteration, if that order is specified. Exceptions thrown by the action are relayed to the caller." />
      <item value="Leader Board" />
      <item value="Cannot provide null context for the database." />
      <item value="scope" />
      <item value="payee Name" />
      <item value="privilege" />
      <item value="recommend" />
      <item value="CONTRIBUTION" />
      <item value="Creates a new instance of the [Lazy] that uses the specified initialization function [initializer] and the default thread-safety mode [LazyThreadSafetyMode.SYNCHRONIZED]. If the initialization of a value throws an exception, it will attempt to reinitialize the value at next access. Note that the returned instance uses itself to synchronize on. Do not synchronize from external code on the returned instance as it may cause accidental deadlock. Also this behavior can be changed in the future." />
      <item value="Deprecated" />
      <item value="An annotation argument must be a compile-time constant" />
      <item value="The binary version of its metadata is 1.5.1" />
      <item value="expected version" />
      <item value="winning Marquee" />
      <item value="中奖广告" />
      <item value="中奖" />
      <item value="predict" />
      <item value="remote" />
      <item value="Returns a property delegate to access [ViewModel] by default scoped to this [Fragment]: ``` class MyFragment : Fragment() { val viewmodel: MYViewModel by viewmodels() } ``` Custom [ViewModelProvider.Factory] can be defined via [factoryProducer] parameter, factory returned by it will be used to create [ViewModel]: ``` class MyFragment : Fragment() { val viewmodel: MYViewModel by viewmodels { myFactory } } ``` Default scope may be overridden with parameter [ownerProducer]: ``` class MyFragment : Fragment() { val viewmodel: MYViewModel by viewmodels ({requireParentFragment()}) } ``` This property can be accessed only after this Fragment is attached i.e., after [Fragment.onAttach()], and access prior to that will result in IllegalArgumentException." />
      <item value="KV CUR VIDEO TIMES" />
      <item value="Callback interface you can use when instantiating a Handler to avoid having to implement your own subclass of Handler." />
      <item value="Detached" />
      <item value="per" />
      <item value="Evaluates the pending bindings, updating any Views that have expressions bound to modified variables. This &lt;b&gt;must&lt;b&gt; be run on the UI thread." />
      <item value="elem" />
      <item value="Placement's Ad is loading." />
      <item value="No value passed for parameter 'value'" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="274" />
        <entry key="ENGLISH" value="275" />
        <entry key="FRENCH" value="2" />
        <entry key="CROATIAN" value="1" />
        <entry key="ROMANIAN" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="SOMALI" value="1" />
        <entry key="INDONESIAN" value="1" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1624933559590" />
  </component>
  <component name="Settings">
    <option name="baiduTranslateSettings">
      <app-key>
        <option name="primaryLanguage" value="CHINESE" />
      </app-key>
    </option>
    <option name="youdaoTranslateSettings">
      <youdao-translate>
        <option name="primaryLanguage" value="AUTO" />
      </youdao-translate>
    </option>
  </component>
</application>